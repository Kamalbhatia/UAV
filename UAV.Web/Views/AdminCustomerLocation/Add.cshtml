@model UAVBusiness.Models.CustomerLocationModel

@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    ViewBag.Title = "STATE";

    var lstCustomer = ViewBag.CustomerList as List<SelectListItem>;

    string btnText = Model != null && Model.ID > 0 ? "Update" : "Add";
}









<div id="page-wrapper">
    <div class="container-fluid">
        <div class="row">
            <div class="col-lg-12">
                <h1 class="boxh1">
                    Customer Location
                </h1>
                <div class="clearfix"></div>

            </div>
            <div id="div_state_add">

                @using (Html.BeginForm("AddUpdate", "AdminCustomerLocation", FormMethod.Post, new { @id = "form_state_add", @class = "add-cat-form" }))
                {
                    @Html.HiddenFor(t => t.ID)
                     @Html.HiddenFor(t => t.Latitude)
                    @Html.HiddenFor(t => t.Longitude)
                    <div class="col-lg-6">
                        <div class="location-map">
                            <div id="map" style="height:300px; width:100%"></div>
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div class="form-group row">
                            <label class="control-label col-sm-12 marginTop20" for="email">Customer</label>
                            <div class="col-sm-12">
                                @Html.DropDownListFor(t => t.CustomerID, lstCustomer, "--Select Customer--", new { @placeholder = "Please select customer name", @class = "ddlMultiSlectBox" })
                                @Html.ValidationMessageFor(t => t.CustomerID, null, new { @class = "validation" })
                            </div>
                        </div>

                        <div class="form-group row">
                            <label class="control-label col-sm-12 marginTop20" for="email">Location name</label>
                            <div class="col-sm-12">
                                @Html.TextBoxFor(t => t.LocationName, new { @class = "form-control", @placeholder = "Location name" })
                                @Html.ValidationMessageFor(t => t.LocationName, null, new { @class = "validation" })
                            </div>
                        </div>

                        <div class="form-group row">
                            <div class="col-sm-12  marginTop20 text-right">
                                <a href="@Url.Action("List", "AdminCustomerLocation")" class="btn btn-success">Cancel</a>
                                <button type="submit" class="btn btn-success">@btnText</button>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>


<script type="text/javascript" src="http://maps.googleapis.com/maps/api/js?libraries=places&key=AIzaSyAML9zLZieqX6MsHTVFFLoFnvfxGoP1mAM"></script>
<script>

    google.maps.event.addDomListener(window, 'load', loadme());

    function loadme() {
        var map = new google.maps.Map(document.getElementById('map'), {
            zoom: 8,
            center: new google.maps.LatLng(@Model.Location.Latitude, @Model.Location.Longitude),
            mapTypeId: google.maps.MapTypeId.ROADMAP
        });

        var marker = new google.maps.Marker({
            map: map,
            draggable: true,
            icon: 'http://wds2.projectstatus.co.uk/DemoRequesta/content/images/pickup.png'
        });
       

        marker.setPosition(new google.maps.LatLng(@Model.Location.Latitude, @Model.Location.Longitude));
        
        google.maps.event.addListener(marker, 'dragend', function () {
            geocodePosition(marker.getPosition());
        });

        var places = new google.maps.places.Autocomplete(document.getElementById('LocationName'));

        google.maps.event.addListener(places, 'place_changed', function () {
      
            var place = places.getPlace();
            var address = place.formatted_address;
            var latitude = place.geometry.location.lat();
            var longitude = place.geometry.location.lng();

            $("#Latitude").val(latitude);
            $("#Longitude").val(longitude);

            marker.setPosition(new google.maps.LatLng(latitude, longitude));
            map.setCenter(new google.maps.LatLng(latitude, longitude));
       
        });

        function geocodePosition(pos) {
            geocoder = new google.maps.Geocoder();
            geocoder.geocode
             ({
                 latLng: pos
             },
                 function (results, status) {
                   
                     $("#Latitude").val(results[0].geometry.location.lat());
                     $("#Longitude").val(results[0].geometry.location.lng());
                     $("#LocationName").val(results[0].formatted_address);                  
                 }
             );
        }
    }

</script>